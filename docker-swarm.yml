services:
  nginx:
    image: nginx:1.29.0-alpine
    ports:
      - "8080:8080"
    networks:
      - cdn-overlay
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      placement:
        constraints:
          - node.role == manager

  frontend:
    image: cdn-frontend:latest
    networks:
      - cdn-overlay
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
        order: stop-first

  backend:
    image: cdn-backend:latest
    networks:
      - cdn-overlay
    volumes:
      - cdn-storage:/var/cdn/storage
    environment:
      POSTGRES_DB: cdn
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      RUST_LOG: INFO
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        failure_action: pause
        order: stop-first

  postgres:
    image: postgres:13.18
    environment:
      POSTGRES_DB: cdn
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - cdn-overlay
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager

  portainer:
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

configs:
  nginx_config:
    file: ./nginx.conf

volumes:
  pg_data:
  cdn-storage:
  portainer_data:

networks:
  cdn-overlay:
    driver: overlay
    attachable: true
